{{- if .Values.inference.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: inference
  labels:
    {{- include "snake-rl.labels" . | nindent 4 }}
    app.kubernetes.io/component: inference
  annotations:
     "helm.sh/hook-weight": "3"
spec:
  replicas: {{.Values.inference.replicaCount | default 1}}
  selector:
    matchLabels:
      {{- include "snake-rl.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: inference
  template:
    metadata:
      labels:
        {{- include "snake-rl.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: inference
    spec:
      initContainers:
      # Wait for training service to be ready
      - name: wait-for-training
        image: busybox:1.28
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for training service..."
            until nc -z training 50051; do
              echo "Training service not ready, waiting..."
              sleep 5
            done
            echo "Training service is ready!"
      
      # Wait for env service to be ready
      - name: wait-for-env
        image: busybox:1.28
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for env service..."
            until nc -z env 5000; do
              echo "Env service not ready, waiting..."
              sleep 5
            done
            echo "Env service is ready!"
      containers:
      - name: inference
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.inference.image.repository }}:{{ .Values.inference.image.tag | default .Values.global.imageTag }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["python", "main.py"]
        args:
          - "--snake_id"
          - {{ .Values.inference.args.snakeId | quote }}
          - "--env_host"
          - {{ .Values.inference.args.envHost | quote }}
          - "--model_save_dir"
          - {{ .Values.inference.args.modelSaveDir | quote }}
          - "--log_file"
          - {{ .Values.inference.args.logFile | quote }}
          - "--grpc_host"
          - {{ .Values.inference.args.grpcHost | quote }}
          - "--grpc_port"
          - {{ .Values.inference.args.grpcPort | quote }}
          - "--batch_size"
          - {{ .Values.inference.args.batchSize | quote }}
          - "--learning_rate"
          - {{ .Values.inference.args.learningRate | quote }}
          {{- if .Values.inference.args.syncEnabled }}
          - "--sync_enabled"
          - "--sync_port"
          - {{ .Values.inference.args.syncPort | quote }}
          - "--sync_buffer_size"
          - {{ .Values.inference.args.syncBufferSize | quote }}
          {{- end }}
        env:
        {{- include "snake-rl.commonEnvVars" . | nindent 8 }}
        {{- include "snake-rl.rabbitmqEnvVars" . | nindent 8 }}
        resources:
          {{- toYaml .Values.inference.resources | nindent 10 }}
        {{- if .Values.storage.enabled }}
        volumeMounts:
        - name: shared-storage
          mountPath: /output
        {{- end }}
      {{- if .Values.storage.enabled }}
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: {{ include "snake-rl.fullname" . }}-inference-storage
      {{- end }}
{{- end }}