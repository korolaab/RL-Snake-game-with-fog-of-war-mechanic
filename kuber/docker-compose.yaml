version: '3.8'
services:
  # Environment Service - Snake Game
  env:
    build:
      context: ./services/Env
      dockerfile: Dockerfile
    container_name: env
    hostname: env
    ports:
      - "5000:5000"
    command: ["python","app.py","--fps","100","--seed","1", "--max-steps-without-food","100"]
    environment:
      - PYTHONUNBUFFERED=1
      - ENABLE_CONSOLE_LOGS=true
      - EXPERIMENT_NAME=${EXPERIMENT_NAME}
      - ENABLE_CONSOLE_LOGS=${ENABLE_CONSOLE_LOGS}
      - LOG_FILE=${LOG_FILE}
      - RUN_ID=${RUN_ID}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - rl-network
    restart: unless-stopped
    tty: true
    stdin_open: true
    volumes:
      - shared-output:/output

  # Training Service - gRPC Server
  training:
    build:
      context: ./services/Training
      dockerfile: Dockerfile
    container_name: training
    hostname: training
    depends_on:
      env:
        condition: service_healthy
    ports:
      - "50051:50051"  # gRPC port
    command: [
      "python", "training.py",
      "--snake_id", "adam",
      "--learning_rate", "0.001",
      "--log_file", "/output/training.log",
      "--port", "50051"
    ]
    environment:
      - PYTHONUNBUFFERED=1
      - ENABLE_CONSOLE_LOGS=true
      - EXPERIMENT_NAME=${EXPERIMENT_NAME}
      - ENABLE_CONSOLE_LOGS=${ENABLE_CONSOLE_LOGS}
      - LOG_FILE=${LOG_FILE}
      - RUN_ID=${RUN_ID}
    volumes:
      - shared-output:/output
      - ./shared/configs:/configs:ro
    networks:
      - rl-network
    restart: unless-stopped

  # Inference Service - gRPC Client
  inference:
    build:
      context: ./services/Inference
      dockerfile: Dockerfile
    container_name: inference
    hostname: inference
    depends_on:
      env:
        condition: service_healthy
      training:
        condition: service_started
    command: [
      "python", "main.py",
      "--snake_id", "adam",
      "--env_host", "env:5000",
      "--model_save_dir", "/output/models",
      "--log_file", "/output/agent1.log",
      "--grpc_host", "training",
      "--grpc_port", "50051",
      "--batch_size", "10"
    ] 
    environment:
      - PYTHONUNBUFFERED=1
      - ENV_HOST=env:5000
      - ENABLE_CONSOLE_LOGS=${ENABLE_CONSOLE_LOGS}
      - EXPERIMENT_NAME=${EXPERIMENT_NAME}
      - LOG_FILE=${LOG_FILE}
      - RUN_ID=${RUN_ID}
    volumes:
      - shared-output:/output
      - ./shared/configs:/configs:ro
    networks:
      - rl-network
    restart: unless-stopped

volumes:
  shared-output:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./shared/volumes

networks:
  rl-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
